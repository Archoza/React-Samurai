{"version":3,"file":"static/js/672.d13e9802.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAA8D,0BAA9D,EAAkG,yBAAlG,EAA0I,8BAA1I,EAAiL,wBAAjL,EAAkN,wB,mBCWlN,EAPmB,SAACA,GAChB,OACI,gBAAKC,UAAWC,EAAiB,IAAMA,EAAvC,UACI,SAAC,KAAD,CAASC,GAAE,YAAOH,EAAMI,IAAxB,SAA+BJ,EAAMK,QAEhD,ECDD,EANgB,SAACL,GACb,OACI,gBAAKC,UAAWC,EAAhB,SAAkCF,EAAMM,SAE/C,E,iDC8DKC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAK,wBAAhBD,EAjBL,SAACR,GAEpB,OAAO,+BACH,kBAAMU,SAAUV,EAAMW,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EACXT,KAAM,iBACNU,YAAa,qBAAsBC,SAAU,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,UAEpF,0BACI,2CAKf,IAID,EA7DgB,SAAClB,GACb,IAAImB,EAAQnB,EAAMoB,aACdC,EAAcF,EAAME,YACpBC,EAAeH,EAAMG,aAGrBC,EAAkBF,EACjBG,KAAI,SAACC,EAAQC,GAAT,OACD,SAAC,EAAD,CAAwBrB,KAAMoB,EAAOpB,KAAMD,GAAIqB,EAAOrB,IAArCsB,EADhB,IAGLC,EAAmBL,EAAaE,KAAI,SAAClB,EAASoB,GAAV,OACpC,SAAC,EAAD,CAAqBpB,QAASA,EAAQA,SAAxBoB,EADsB,IASxC,OAAK1B,EAAM4B,QAIP,iBAAK3B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKqB,KAEL,iBAAKtB,UAAWC,EAAhB,WACI,yBAAMyB,KACN,0BACI,0BACI,SAACpB,EAAD,CAAqBG,SAjBrB,SAACmB,GACjB7B,EAAM8B,YAAYD,EAASE,eAE9B,eAGU,SAAC,KAAD,CAAU5B,GAAI,UAoB5B,E,8BC5BD,GAAe6B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACd,GACnB,MAAO,CACHC,aAAcD,EAAMC,aAE3B,IAGwB,SAACc,GACtB,MAAO,CACHJ,YAAa,SAACC,GAAD,OAAoBG,GAASC,EAAAA,EAAAA,GAAmBJ,GAAhD,EAEpB,IAKGK,EAAAA,EAFJ,CAGEC,E","sources":["webpack://samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Rmimc\",\"messages\":\"Dialogs_messages__6Jqul\",\"message\":\"Dialogs_message__+RZI0\",\"dialogsItems\":\"Dialogs_dialogsItems__1QrbA\",\"dialog\":\"Dialogs_dialog__4xylH\",\"active\":\"Dialogs_active__R++Bo\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={`./${props.id}`}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n\r\n//Todo понять почему не работают css модули, после разделения на компоненты не подтягиваются стили в DialogItem","import React from \"react\";\r\nimport classes from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n//Todo понять почему не работают css модули, после разделения на компоненты не подтягиваются стили в Message\r\n","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.messagesPage\r\n    let dialogsData = state.dialogsData\r\n    let messagesData = state.messagesData\r\n\r\n\r\n    let dialogsElements = dialogsData\r\n        .map((dialog, index) =>\r\n            <DialogItem key={index} name={dialog.name} id={dialog.id}/>)\r\n\r\n    let messagesElements = messagesData.map((message, index) =>\r\n        <Message key={index} message={message.message}/>)\r\n\r\n\r\n    let AddNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Navigate to={\"/login\"}/>\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <AddMessageFormRedux onSubmit={AddNewMessage}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </>;\r\n\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"names":["props","className","classes","to","id","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","maxLengthCreator","state","messagesPage","dialogsData","messagesData","dialogsElements","map","dialog","index","messagesElements","isAuth","formData","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}